# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import detect
from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from PyQt5.QtWidgets import QApplication, QLabel, QWidget, QGridLayout
from PyQt5.QtGui import QPixmap
from PyQt5.QtCore import pyqtSignal, QObject

images = os.listdir("data/gesture")
class ImageLabel(QLabel):
    clicked = pyqtSignal(QObject)

    def __init__(self,image, parent=None):
        super().__init__(parent)

        if image in images:
            # print(image)
            image = "data/gesture/" + image
            self.setPixmap(QPixmap(image))
        else:
            # print(image,"?")
            self.setPixmap(QPixmap("data/gesture/1.jpg"))

    def mousePressEvent(self, event):
        self.clicked.emit(self)


#主界面
class Ui_main(QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
        self.Dialog = QtWidgets.QWidget()  # 创建窗口主部件
        self.setupUi()
        self.Dialog.show()
    def setupUi(self):
        self.Dialog.setObjectName("基于mediapipe的智能视频处理平台")
        self.Dialog.resize(608, 386)

        self.pushButton_2 = QtWidgets.QPushButton(self.Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(320, 180, 141, 131))
        self.pushButton_2.setObjectName("相机模式")
        self.pushButton_2.clicked.connect(self.camera)
        self.pushButton_3 = QtWidgets.QPushButton(self.Dialog)
        self.pushButton_3.setGeometry(QtCore.QRect(100, 180, 141, 131))
        self.pushButton_3.setObjectName("照片处理模式")

        self.label = QtWidgets.QLabel(self.Dialog)
        self.label.setGeometry(QtCore.QRect(120, 450, 350, 91))
        self.label.setObjectName("欢迎使用基于mediapipe的智能视频处理平台")


        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self.Dialog)
    def camera(self):
        self.Dialog.hide()
        self.f = Ui_video()

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.Dialog.setWindowTitle(_translate("Dialog", "欢迎使用基于mediapipe的智能视频处理平台"))
        self.pushButton_2.setText(_translate("Dialog", "相机模式"))
        self.pushButton_3.setText(_translate("Dialog", "照片处理模式"))
        self.label.setText(_translate("Dialog", "基于mediapipe的智能视频处理平台"))#
#视频界面
class Ui_video(QWidget):
    def __init__(self):
        super().__init__()
        self.video = QtWidgets.QWidget()  # 创建窗口主部件
        self.setupUi()
        self.video.show()
    def setupUi(self):

        self.video.setObjectName("video")
        self.video.resize(679, 413)
        self.pushButton = QtWidgets.QPushButton(self.video)
        self.pushButton.setGeometry(QtCore.QRect(60, 100, 221, 81))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.setting)
        self.pushButton_2 = QtWidgets.QPushButton(self.video)
        self.pushButton_2.setGeometry(QtCore.QRect(370, 270, 251, 81))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.camera)
        self.label = QtWidgets.QLabel(self.video)
        self.label.setGeometry(QtCore.QRect(410, 150, 68, 15))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.video)
        self.label_2.setGeometry(QtCore.QRect(140, 270, 68, 15))
        self.label_2.setObjectName("label_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.video)
        self.pushButton_3.setGeometry(QtCore.QRect(552, 10, 111, 51))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.back)
        self.video.setStyleSheet("background-color: white;")  # 设置窗口背景颜色为白色
        self.label.setStyleSheet("color: blue; font-size: 16px;")  # 设置标签的字体颜色为蓝色，字体大小为 16px
        self.pushButton.setStyleSheet("border: 2px solid blue; border-radius: 10px;")  # 设置按钮的边框为蓝色，圆角半径为 10px
        self.pushButton_2.setStyleSheet(" border: 2px solid blue; border-radius: 10px;")  # 设置按钮的边框为蓝色，圆角半径为 10px
        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self.video)
    def camera(self):
        detect.detect_zdy()
    def setting(self):
        self.video.hide()
        self.s = Ui_setting()
        # print(1)
        # self.s.show()
    def back(self):
        self.video.hide()
        self.f = Ui_main()
        # self.f.show()
    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.video.setWindowTitle(_translate("video", "照相模式"))
        self.pushButton.setText(_translate("video", "自定义手势设置"))
        self.pushButton_2.setText(_translate("video", "开始摄像"))
        self.label.setText(_translate("video", ""))
        self.label_2.setText(_translate("video", ""))
        self.pushButton_3.setText(_translate("video", "返回"))

#手势设置界面
class Ui_setting(QWidget):
    def __init__(self):
        super().__init__()
        grid = QGridLayout(self)
        self.setWindowTitle("自定义手势")
        self.label1 = ImageLabel("gesture1.jpg")
        self.label1.clicked.connect(self.on_label_clicked)
        grid.addWidget(self.label1, 0, 0)
        self.label2 = ImageLabel("gesture2.jpg")
        self.label2.clicked.connect(self.on_label_clicked)
        grid.addWidget(self.label2, 0, 1)
        self.label3 = ImageLabel("gesture3.jpg")
        self.label3.clicked.connect(self.on_label_clicked)
        grid.addWidget(self.label3, 0, 2)

        self.label_1 = QtWidgets.QLabel(self)
        self.label_1.setObjectName("???")
        grid.addWidget(self.label_1, 0, 3)

        self.label4 = ImageLabel("gesture4.jpg")
        self.label4.clicked.connect(self.on_label_clicked)
        grid.addWidget(self.label4, 1, 0)

        self.label5 = ImageLabel("gesture5.jpg")
        self.label5.clicked.connect(self.on_label_clicked)
        grid.addWidget(self.label5, 1, 1)
        self.label6 = ImageLabel("gesture6.jpg")
        self.label6.clicked.connect(self.on_label_clicked)
        grid.addWidget(self.label6, 1, 2)

        self.back_button = QtWidgets.QPushButton("返回")
        self.back_button.clicked.connect(self.back)
        grid.addWidget(self.back_button, 2, 0)

        self.show()

    def on_label_clicked(self, sender):
        try:
            if sender == self.label1:
                print('Label 1 clicked')
                detect.sampling(1)
            elif sender == self.label2:
                print('Label 2 clicked')
                detect.sampling(2)
            elif sender == self.label3:
                print('Label 3 clicked')
                detect.sampling(3)
            elif sender == self.label4:
                print(  'Label 4 clicked')
                detect.sampling(4)
            elif sender == self.label5:
                print('Label 5 clicked')
                detect.sampling(5)
            elif sender == self.label6:
                print('Label 6 clicked')
                detect.sampling(6)
        except Exception as exc:
            print("读取异常", exc)

    def back(self):
        self.hide()
        self.f = Ui_video()





if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    # ui = Ui_video()
    ui = Ui_main()
    # ui = Ui_setting()
    sys.exit(app.exec_())
